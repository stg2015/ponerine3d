//apply from: "${CONFIG_URL}/loadConfig.gradle"

subprojects { project ->
    group = GROUP
    version = VERSION_NAME

    repositories {
        jcenter()
//        maven { url = "http://nexus.sdp.nd/nexus/content/groups/android-public/"  }
        maven { url 'http://localhost:8081/nexus/content/groups/android/' }
//        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    buildscript {
        repositories {
            jcenter()
            maven {  url = "http://nexus.sdp.nd/nexus/content/groups/android-public/"   }
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:1.5.0'
            classpath 'me.tatarka:gradle-retrolambda:3.2.3'
            classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
            classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
            // A Gradle plugin to report the number of method references in your APK on every build.
            classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.3.0'
            // NOTE: Do not place your application dependencies here; they belong
            // in the individual module build.gradle files
        }
        // Exclude the version that the android plugin depends on.
        configurations.classpath.exclude group: 'com.android.tools.external.lombok'
    }

    configurations.all { resolutionStrategy.cacheChangingModulesFor 0, 'seconds' }
}
allprojects {
    ext {
        getPropertyOrDefault = { key, defValue ->
            if (project.getProperties().containsKey(key)) {
                return project.getProperties().get(key)
            } else {
                return defValue
            }
        }

        downloadFile = { localFile, url ->
            if (!localFile.exists()) {
                new URL(url).withInputStream { i -> localFile.withOutputStream { it << i } }
            }
        }

        cacheConfigsDir = getPropertyOrDefault("CONFIG_CACHE", ".configs")
        cacheConfigs = "${rootDir}/${cacheConfigsDir}"
        remoteConfigsUrl = "${CONFIG_URL}/"
    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
}